#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Git hooks
# –ê–≤—Ç–æ—Ä: werserk

echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Git hooks –¥–ª—è HSE LaTeX –ø—Ä–æ–µ–∫—Ç–∞..."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

log_info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

log_warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
if [ ! -d ".git" ]; then
    log_error "–≠—Ç–æ –Ω–µ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π! –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ Git —Å–Ω–∞—á–∞–ª–∞."
    exit 1
fi

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é hooks –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
mkdir -p .git/hooks

# –ö–æ–ø–∏—Ä—É–µ–º pre-commit hook
if [ -f ".git/hooks/pre-commit" ]; then
    log_warn "Pre-commit hook —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é..."
    cp .git/hooks/pre-commit .git/hooks/pre-commit.backup.$(date +%Y%m%d_%H%M%S)
fi

# –°–æ–∑–¥–∞–µ–º pre-commit hook
cat > .git/hooks/pre-commit << 'EOF'
#!/bin/bash

set -euo pipefail

# Pre-commit hook –¥–ª—è –∏–∑–±–∏—Ä–∞—Ç–µ–ª—å–Ω–æ–π —Å–±–æ—Ä–∫–∏ —Ç–æ–ª—å–∫–æ –∑–∞—Ç—Ä–æ–Ω—É—Ç—ã—Ö PDF

echo "üî® Pre-commit: –∏–∑–±–∏—Ä–∞—Ç–µ–ª—å–Ω–∞—è —Å–±–æ—Ä–∫–∞ LaTeX –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤..."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

log_info() { echo -e "${GREEN}[INFO]${NC} $1"; }
log_warn() { echo -e "${YELLOW}[WARN]${NC} $1"; }
log_error(){ echo -e "${RED}[ERROR]${NC} $1"; }

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
if ! command -v pdflatex >/dev/null 2>&1; then
  log_error "pdflatex –Ω–µ –Ω–∞–π–¥–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ LaTeX."
  exit 1
fi
if ! command -v make >/dev/null 2>&1; then
  log_error "make –Ω–µ –Ω–∞–π–¥–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ make."
  exit 1
fi

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–∑–º–µ–Ω—ë–Ω–Ω—ã–µ .tex —Ñ–∞–π–ª—ã, –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –≤ –∏–Ω–¥–µ–∫—Å
mapfile -t CHANGED_TEX < <(git diff --cached --name-only --diff-filter=ACM | grep -E '\\.tex$' || true)
if [ ${#CHANGED_TEX[@]} -eq 0 ]; then
  log_info "–ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ .tex —Ñ–∞–π–ª–∞—Ö, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–±–æ—Ä–∫—É."
  exit 0
fi

mkdir -p build

declare -A TARGET_TEX_SET

add_target_for_tex() {
  local tex_file="$1"
  # –ï—Å–ª–∏ –∏–∑–º–µ–Ω—ë–Ω —Ñ–∞–π–ª –≤–Ω—É—Ç—Ä–∏ –∫–∞—Ç–∞–ª–æ–≥–∞ topics/, –Ω–∞—Ö–æ–¥–∏–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–µ –≤–µ—Ä—Ö–Ω–µ—É—Ä–æ–≤–Ω–µ–≤—ã–µ .tex
  if [[ "$tex_file" == */topics/*.tex ]]; then
    local topics_dir="$(dirname "$tex_file")"
    local parent_dir="$(dirname "$topics_dir")"
    # –ö–∞–Ω–¥–∏–¥–∞—Ç—ã: –ª—é–±—ã–µ .tex –≤ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏, –∏—Å–∫–ª—é—á–∞—è –ø–æ–¥–∫–∞—Ç–∞–ª–æ–≥ topics
    while IFS= read -r cand; do
      TARGET_TEX_SET["$cand"]=1
    done < <(find "$parent_dir" -maxdepth 1 -type f -name "*.tex" 2>/dev/null || true)
  else
    TARGET_TEX_SET["$tex_file"]=1
  fi
}

for f in "${CHANGED_TEX[@]}"; do
  add_target_for_tex "$f"
done

if [ ${#TARGET_TEX_SET[@]} -eq 0 ]; then
  log_warn "–ù–µ –Ω–∞–π–¥–µ–Ω—ã —Ü–µ–ª–µ–≤—ã–µ .tex –¥–ª—è —Å–±–æ—Ä–∫–∏."
  exit 0
fi

log_info "–¶–µ–ª–µ–π –¥–ª—è —Å–±–æ—Ä–∫–∏: ${#TARGET_TEX_SET[@]}"

BUILD_FAILED=0
for target_tex in "${!TARGET_TEX_SET[@]}"; do
  pdf_file="${target_tex%.tex}.pdf"
  log_info "–°–±–æ—Ä–∫–∞: $pdf_file"
  if make "$pdf_file" > build/build.log 2>&1; then
    if [ -f "$pdf_file" ]; then
      git add "$pdf_file"
    fi
  else
    BUILD_FAILED=1
    echo "" >&2
    log_error "–û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ –¥–ª—è: $target_tex" >&2
    echo "----- build/build.log -----" >&2
    cat build/build.log >&2 || true
    echo "---------------------------" >&2
  fi
done

if [ "$BUILD_FAILED" -ne 0 ]; then
  exit 1
fi

log_info "–ì–æ—Ç–æ–≤–æ. –û–±–Ω–æ–≤–ª–µ–Ω—ã –∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã —Å–≤—è–∑–∞–Ω–Ω—ã–µ PDF."
exit 0
EOF

# –î–µ–ª–∞–µ–º hook –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º
chmod +x .git/hooks/pre-commit

log_info "‚úÖ Pre-commit hook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."

if command -v pdflatex &> /dev/null; then
    log_info "‚úÖ pdflatex –Ω–∞–π–¥–µ–Ω"
else
    log_warn "‚ö†Ô∏è  pdflatex –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ LaTeX –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤:"
    echo "  Ubuntu/Debian: sudo apt install texlive-full"
    echo "  CentOS/RHEL: sudo yum install texlive"
    echo "  macOS: brew install --cask mactex"
fi

if command -v make &> /dev/null; then
    log_info "‚úÖ make –Ω–∞–π–¥–µ–Ω"
else
    log_warn "‚ö†Ô∏è  make –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ make:"
    echo "  Ubuntu/Debian: sudo apt install make"
    echo "  CentOS/RHEL: sudo yum install make"
    echo "  macOS: xcode-select --install"
fi

echo ""
log_info "üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Git hooks –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo ""
log_info "–¢–µ–ø–µ—Ä—å –ø—Ä–∏ –∫–∞–∂–¥–æ–º –∫–æ–º–º–∏—Ç–µ –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏:"
echo "  1. –ü—Ä–æ–≤–µ—Ä—è—Ç—å—Å—è –Ω–∞–ª–∏—á–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ .tex —Ñ–∞–π–ª–∞—Ö"
echo "  2. –°–æ–±–∏—Ä–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –Ω–∏–º–∏ PDF (–±–µ–∑ make all)"
echo "  3. –î–æ–±–∞–≤–ª—è—Ç—å—Å—è –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ PDF –≤ –∫–æ–º–º–∏—Ç"
echo "  4. –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞—Ç—å—Å—è –∫–æ–º–º–∏—Ç—ã —Å –æ—à–∏–±–∫–∞–º–∏ —Å–±–æ—Ä–∫–∏"
echo ""
log_info "–î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
echo "  git add ."
echo "  git commit -m '–¢–µ—Å—Ç–æ–≤—ã–π –∫–æ–º–º–∏—Ç'"
